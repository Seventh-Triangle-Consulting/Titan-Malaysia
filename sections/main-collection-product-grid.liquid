{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
 {{ 'breadcrumb.css' | asset_url | stylesheet_tag }}
{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}
{%- if section.settings.enable_quick_add -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }} 
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.55 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.55 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
   .sorting_filters{display:none;}

  .short-new {
    position: fixed;
    bottom: 0px;
    background: #F7F7F7;
  /*   box-shadow: 0px -2px 6px rgba(0, 0, 0, 0.25); */
    border-radius: 10px 10px 0px 0px;
    overflow: auto;
    transition: 0.5s;
    transform: translateY(100%);
  }
  .short-new.current {
    transition: 0.5s;
    transform: translateY(0%);
    height:35vh;
  }


   .fac-fil-mob, .fac-short-mob {
      justify-content: flex-start;
      align-items: center;
      display: flex;
      gap: 10px;
         height: 70px;
      background: #dd5041;
      border-top: 1px solid rgba(0, 0, 0, 0.3);
      border-bottom: 1px solid rgba(0, 0, 0, 0.3);
      position: fixed;
      bottom: 0;
      left: 0;
      width: 50%;
      z-index: 1;
      line-height:0;
      padding: 8px 13px;
      padding-left: 32px;
  }


  @media screen and (max-width: 820px) {
    .sorting_filters{display:block;}
    .sorting_filters .fac-icon-txt{
    color: #fff;
    font-size: 18px;
    line-height: 21.33px;
    font-family: var(--font-family-h2); }
    .sorting_filters .getName{
      font-size: 15px;padding-top: 4px;
      line-height: 15.78px;
      letter-spacing: 0.01em;
      color: #fff;
    }
     .custom-gradient-color  {background: rgba(0, 0, 0, 0.4); width: 100%; height: 100vh; z-index: 5; position: fixed; top: 0; left: 0; }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding">
<div class="collectionbreadcrumb page-width">
<nav aria-label="breadcrumb ">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li> 
    {%- if collection.url -%}<li class="breadcrumb-item active" aria-current="page">{{ collection.title  }}</li>{%- endif -%}
     
      </ol>
  </nav>
</div>
  
  {%- paginate collection.products by section.settings.products_per_page -%}
    {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
    <div class="collectiontopbar page-width">
       <div class="collectiontopbarright">
    <div class="collectiontitle">
    <h1 class="collection-hero__title">
        <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}: </span>
        {{- collection.title | escape -}}
    
      </h1>
    <p class="product-count__text text-body">
              
            
      <span id="ProductCountDesktop">
                {%- if collection.results_count -%}
                  ({{'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count | remove:'products' | remove_last:' '}})
                {%- elsif collection.products_count == collection.all_products_count -%}
                  ({{'products.facets.product_count_simple' | t: count: collection.products_count | remove:'products'| remove_last:' '}})
                {%- else -%}
                  ({{'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count | remove:'products' | remove_last:' ' }})
                {%- endif -%}
              </span>
    </p>

    </div>
     
    <div class="collectionmaincategoies">
   
 {% assign  metaobject = collection.metafields.custom.subcategories_collections.value %}  
    {%  assign subcatgorieslink =  metaobject.subcategories_collection | split:',' %}
        {%  assign subcatgoriestitle =  metaobject.subcategory_title | split:'##' %}
  
  {% assign collectiontitle = collection.title | split:" " %}
    {%  assign currentcollection = collectiontitle[0] | downcase | remove:"'s" %}
    {% for categories in metaobject%}
          {% assign cathead = categories.main_subcategory_title.value | downcase %}
      <a href="{{ categories.main_category_link.value.url }}" class="categories{%  if currentcollection == cathead %} active {% endif %}">{{ categories.main_subcategory_title.value  }}</a>
    
      {% endfor %}
   
    </div>
       </div>
    {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
      <facet-filters-form class="facets facets-vertical-sort   no-js-hidden">
        <form class="facets-vertical-form" id="FacetSortForm">
          <div class="facet-filters sorting caption">
 
            <div class="facet-filters__field  mobilesticky_sorting ">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" class="icon-sort" viewBox="0 0 16 22" fill="none">
<path d="M11.3708 20.0518L16 15.4726V16.9118L10.8563 22L5.71232 16.9118V15.4726L10.3419 20.0518V9.32299H11.3708V20.0518ZM4.62924 1.94786L0 6.5274V5.08818L5.14366 0L10.2873 5.08818V6.5274L5.65807 1.94786V12.6766H4.62924V1.94786Z" fill="black"/>
</svg>
              <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
              </h2>

              <div class="select">
                {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                <select
                  name="sort_by"
                  class="facet-filters__sort select__select caption-large"
                  id="SortBy"
                  aria-describedby="a11y-refresh-page-message"
                >
                  {%- for option in collection.sort_options -%}
                    <option
                        class="optionValue"
                      value="{{ option.value | escape }}"
                      {% if option.value == sort_by %}
                        selected="selected"
                      {% endif %}
                    >
                      {% if option.value == 'created-descending' %}
                        Launch Date
                      {% else %}
                      {{ option.name | escape | replace: ',',':' }}
                        {% endif %}
                    </option>
                  {%- endfor -%}
                </select>
                {% render 'icon-caret' %}
              </div>
 
            </div>
            <noscript>
              <button type="submit" class="facets__button-no-js button button--secondary">
                {{ 'products.facets.sort_button' | t }}
              </button>
            </noscript>
          </div>

          <div class="product-count-vertical light" role="status">
            
            <div class="loading-overlay__spinner">
              <svg
                aria-hidden="true"
                focusable="false"
                class="spinner"
                viewBox="0 0 66 66"
                xmlns="http://www.w3.org/2000/svg"
              >
                <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
              </svg>
            </div>
          </div>
        </form>
      </facet-filters-form>
    {%- endif -%}

    </div>
    <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
      {{ 'component-facets.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside
          aria-labelledby="verticalTitle"
          class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          id="main-collection-filters"
          data-id="{{ section.id }}"
        >
{% if collection.metafields.custom.subcategories_collections.value != blank %}
         <div class="collectionfiltercategories desktop">
        {% assign  metaobject = collection.metafields.custom.subcategories_collections.value %} 
        {% for categories in  metaobject %}          
        {% if request.path contains categories.main_category_link.value.url %}
        {%  assign subcatgoriestitle =  categories.subcategory_title | split:'##' %} 
        <p class="head">{{ subcatgoriestitle[0] }}</p>
        {% for collectionlinks in categories.subcategories_collection.value %}
        {%  assign subcatgoriesturl = collectionlinks.url %} 
        <a  href="{{ subcatgoriesturl }}" class="link  {%  if request.path == subcatgoriesturl %} active {% endif %}">{{ subcatgoriestitle[forloop.index] }}</a><br>      
        {% endfor %}       
        {% endif %}      
        {% endfor %}   
    </div>
   <div class="collectionfiltercategories mobile swiper catslidercollection">
  <div class="swiper-wrapper">
        {% assign  metaobject = collection.metafields.custom.subcategories_collections.value %} 
        {% for categories in  metaobject %}          
        {% if request.path contains categories.main_category_link.value.url %}
        {%  assign subcatgoriestitle =  categories.subcategory_title | split:'##' %} 
        {% for collectionlinks in categories.subcategories_collection.value %}
        {%  assign subcatgoriesturl = collectionlinks.url %} 
          <div class="swiper-slide ">
        <a  href="{{ subcatgoriesturl }}" class="link  {%  if request.path == subcatgoriesturl %} active {% endif %}">{{ subcatgoriestitle[forloop.index] }}</a><br>      
          </div>
          {% endfor %}       
        {% endif %}      
        {% endfor %}   
    </div>
  <div class="cat-nav-btns">
                       <div class="swiper-ctrl cat-btn-prev">{% render 'color-next-arrow' %}</div>
                       <div class="swiper-ctrl cat-btn-next">{% render 'color-next-arrow' %}</div>
    
              </div>
   </div>
  {% endif %}
          {% render 'facets',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </aside>
      {%- endif -%}
<!-- custom sort -->
      <div class="sorting_filters  mobilesticky_sorting">
        <div class="fac-short-mob" onclick="SortBy()" data-atr="filter-4">
          <svg width="16" height="22" viewBox="0 0 16 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.3708 20.0518L16 15.4726V16.9118L10.8563 22L5.71232 16.9118V15.4726L10.3419 20.0518V9.32299H11.3708V20.0518ZM4.62924 1.94786L0 6.5274V5.08818L5.14366 0L10.2873 5.08818V6.5274L5.65807 1.94786V12.6766H4.62924V1.94786Z" fill="black"/>
          </svg>
          <div class="getname-container">
            <span class="fac-icon-txt">Sort by</span>
            <div class="getName"></div>
          </div>
        </div>
        <div class="sort-mob"></div>
      </div>

      <!-- Custom Sorting Mobile -->
      <div
        class="product-grid-container"
        id="ProductGridContainer"
        
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
              "
            >
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                {% assign productid = product.id %}
                <li
                  class="grid__item"
                  
                >
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_quick_add: section.settings.enable_quick_add,
                    show_color-swatch:section.settings.enable_colorswatch,
                    section_id: section.id,
                    forloop_index:forloop.index
                  %}
                </li>
              {%- endfor -%}
            </ul>
{% comment %}
            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          {% endcomment %}
          <div id="product-grid-Pagination">
              {% if paginate.next %}
                <a
                  class="btn btn-outline-primary d-inline-flex align-items-center mt-5 mb-0"
                  href="{{ paginate.next.url }}"
                  onclick="onClickCollectionPagination(this, window.event||event)"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="me-2"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M7 13l5 5 5-5M7 6l5 5 5-5"/>
                  </svg>
                  Load more
                </a>
              {% endif %}
            </div>
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}


</div>
                             <div class="sort-mob ">
  {% render 'custom-sort' %}
</div>
   
  
  
               <script>
                 let highvalue = document.getElementById('Filter-Price-LTE').value;                
                    sessionStorage.setItem('selectedPrice',highvalue);
                    sessionStorage.setItem('lowestSelectedPrice', 0);
                    sessionStorage.setItem('selectedPricem',highvalue);
                    sessionStorage.setItem('lowestSelectedPricem', 0);
                 
                              
                  function selectedPrice() {
      try{
        if (parseInt(sessionStorage.getItem('selectedPrice')) ) {
          const priceRange = parseInt(sessionStorage.getItem('selectedPrice'))
          const lowestPriceRange = parseInt(sessionStorage.getItem('lowestSelectedPrice'))
           const priceRangem = parseInt(sessionStorage.getItem('selectedPricem'))
          const lowestPriceRangem = parseInt(sessionStorage.getItem('lowestSelectedPricem'))
          const priceRangeInputs = document.querySelectorAll(".facets__price input");
          priceRangeInputs[0].value = lowestPriceRange;
          priceRangeInputs[1].value = priceRange;
             priceRangeInputs[2].value = lowestPriceRangem;
          priceRangeInputs[3].value = priceRangem;
          

          let rangeInput = document.querySelectorAll('.input-range input'),
          progress = document.querySelector('.slider .progress')
          rangeInput[0].value = lowestPriceRange;
          rangeInput[1].value = priceRange;
           rangeInput[2].value = lowestPriceRangem;
          rangeInput[3].value = priceRangem;
          progress.style.right = 100-(priceRange / rangeInput[1].max)*100 + "%";
           progress.style.left = (lowestPriceRange / rangeInput[0].max)*100 + "%";
           let progressmobile = document.querySelector('.slider .progress.mobile');
           progressmobile.style.left = (lowestPriceRangem / rangeInput[2].max)*100 + "%";
          progressmobile.style.right = 100-(priceRangem / rangeInput[3].max)*100 + "%";
          const outputTwo = document.querySelector('.outputTwo');
          outputTwo.innerHTML = "₹" + priceRangeInputs[1].value;
          const outputOne = document.querySelector('.outputOne');
          outputOne.innerHTML = "₹" + priceRangeInputs[0].value;

          // outputTwo.style.left = (priceRangeInputs[1].value / priceRangeInputs[0].max) * 100 + "%";

      
        }
         let factremoves = document.querySelectorAll("facet-remove");
  factremoves.forEach(function(els){     
     let secondprices =  document.getElementById('Filter-Price-LTE').value;
    let secondpricesm =  document.getElementById('Mobile-Filter-Price-LTE').value;
   
  els.addEventListener('click', (e) => {
    document.getElementById('Mobile-Filter-Price-GTE').value="0";
     let highprice = document.getElementById('highprice').value;
   sessionStorage.setItem('selectedPrice',highprice);
    sessionStorage.setItem('lowestSelectedPrice', 0);
    sessionStorage.setItem('selectedPricem',highprice);
    sessionStorage.setItem('lowestSelectedPricem', 0);
  
  });
  });
      }catch(error){
        console.log('error',error)
      }
    }

                

                 document.addEventListener('DOMContentLoaded', () => {

  if(typeof  selectedPrice !== "undefined")selectedPrice();

})

      if (window.innerWidth < 960){
     window.addEventListener('DOMContentLoaded', (event) => {
    document.querySelector('.getName').innerHTML = document.querySelector('.sorting_list label').innerHTML;
  });

  function SortBy() {   
    let shortNew = document.querySelector('.short-new');
    let sortMob = document.querySelector('.sort-mob');
    let body = document.querySelector('body');

    if (shortNew.classList.contains('current')) {
      shortNew.classList.remove('current');
      setTimeout(() => {
        sortMob.style.display = 'none';
        sortMob.classList.remove('custom-gradient-color');
        body.style.overflow = 'unset';
        body.style.background = 'unset';
      }, 200);
    } else {
      sortMob.style.display = 'block';
      sortMob.classList.add('custom-gradient-color');
      shortNew.classList.add('current');
    }
  }

  function selectedSort(event) {   
    let data_value = event.target.value;
    let optionval = document.querySelector(`.optionValue[value="${data_value}"]`);
    if (optionval.innerHTML.trim() == '') {
      document.querySelector('.getName').innerHTML = document.querySelector('.sorting_list label').innerHTML;
    } else {
      document.querySelector('.getName').innerHTML = optionval.innerHTML.trim();
    }

     //console.log('optionval', optionval.innerHTML.trim());
    optionval.setAttribute('selected', 'selected');
    document.querySelector('#SortBy').value = data_value;
    document.querySelector('#FacetSortForm').dispatchEvent(new Event('input', { bubbles: true }));
    document.querySelectorAll('.sorting_list input[type="checkbox"]').forEach((checkbox) => {
      checkbox.checked = false;
    });
    event.target.checked = true;
    setTimeout(() => {
      SortBy();
    }, 500);
  }

  function closeSort() {
    SortBy();
  }
         window.psn();   
      }

 
               
     </script>
<script>

  document.addEventListener("DOMContentLoaded", function() {
  // select the element you want to observe
  const target = document.querySelector('#product-grid-Pagination');
  // create a new intersection observer instance
  window.observer1 = new IntersectionObserver(entries => {
    // callback function called when the observed element intersects with the viewport
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        // do something when the element is in view
        if(document.querySelector('#product-grid-Pagination .btn')) document.querySelector('#product-grid-Pagination .btn').click()
      }
    });
  });
  // start observing the target element
  window.observer1.observe(target);
    // Inifinite Pagination
window.onClickCollectionPagination = async (link, event) => {
    event.preventDefault()
    link.style.width = `${link.offsetWidth}px`
    link.style.height = `${link.offsetHeight}px`
    link.innerHTML = `
        <div class="spinner-border spinner-border-sm mx-auto" role="status" style="width: 1.2rem; height: 1.2rem">
            <span class="visually-hidden">Loading...</span>
        </div>
    `
    const respoonse = await fetch(link.getAttribute('href'))
    const data = await respoonse.text()
    const parser = new DOMParser()
    const newDocument = parser.parseFromString(data, 'text/html')
    document.querySelector('.collection .product-grid')
        .insertAdjacentHTML('beforeend', newDocument.querySelector('.collection .product-grid').innerHTML)
    document.querySelector('#product-grid-Pagination')
        .replaceWith(newDocument.querySelector('#product-grid-Pagination'));
    window.observer1.observe(document.querySelector('#product-grid-Pagination'));
    const customEvent = new CustomEvent('ks.collection.paginated')  
    link.dispatchEvent(customEvent);
  loadmore = true;

  
     window.psn();
  
}
  });
</script>
{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 2,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
     {
      "type": "checkbox",
      "id": "enable_colorswatch",
      "default": false,
      "label": "Show Color Swatch"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
