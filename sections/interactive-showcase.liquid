{{ 'interactive-showcase.css' | asset_url | stylesheet_tag }}

{% assign slides = collection.metafields.custom.stellar_interactive_showcase.value %}
{% if slides == blank %}
  <div class="placeholder-section">
    <p>Please add Interactive Slides to the collection metafield.</p>
  </div>
{% else %}
  <section class="interactive-showcase" data-section-id="{{ section.id }}">
    <div class="main-heading-container">
      {% if section.settings.main_heading != blank %}
        <h2 class="main-heading-title">{{ section.settings.main_heading }}</h2>
      {% endif %}
      {% if section.settings.main_subheading != blank %}
        <p class="main-heading-subheading">{{ section.settings.main_subheading }}</p>
      {% endif %}
    </div>
    <div class="showcase-container">
      <!-- Slides Wrapper with Swiper -->
      <div class="swiper main-slides-swiper">
        <div class="swiper-wrapper">
          {% for slide in slides %}
            <div class="swiper-slide">
              <div
                class="showcase-slide"
                data-slide-index="{{ forloop.index0 }}"
              >
                <!-- Unified Layout Container -->
                <div class="image-grid-layout">
                  {% for item in slide.small_image.value %}
                    {% case forloop.index0 %}
                      {% when 0 %}
                        <!-- Grid Item 1 - Top Left (2x2) -->
                        <div class="grid-item div1">
                          <div class="grid-image-container">
                            <img
                              src="{{ item | image_url: width: 600 }}"
                              class="grid-image"
                              alt="{{ slide.title }} - Image 1"
                              loading="lazy"
                              width="{{ item.width }}"
                              height="{{ item.height }}"
                            >
                          </div>
                        </div>
                      {% when 1 %}
                        <!-- Grid Item 2 - Bottom Left (1x1) -->
                        <div class="grid-item div2">
                          <div class="grid-image-container">
                            <img
                              src="{{ item | image_url: width: 600 }}"
                              class="grid-image"
                              alt="{{ slide.title }} - Image 2"
                              loading="lazy"
                              width="{{ item.width }}"
                              height="{{ item.height }}"
                            >
                          </div>
                        </div>
                      {% when 2 %}
                        <!-- Grid Item 4 - Top Right (1x1) -->
                        <div class="grid-item div4">
                          <div class="grid-image-container">
                            <img
                              src="{{ item | image_url: width: 600 }}"
                              class="grid-image"
                              alt="{{ slide.title }} - Image 3"
                              loading="lazy"
                              width="{{ item.width }}"
                              height="{{ item.height }}"
                            >
                          </div>
                        </div>
                      {% when 3 %}
                        <!-- Grid Item 5 - Bottom Right (2x1) -->
                        <div class="grid-item div5">
                          <div class="grid-image-container">
                            <img
                              src="{{ item | image_url: width: 600 }}"
                              class="grid-image"
                              alt="{{ slide.title }} - Image 4"
                              loading="lazy"
                              width="{{ item.width }}"
                              height="{{ item.height }}"
                            >
                          </div>
                        </div>
                    {% endcase %}
                  {% endfor %}

                  <!-- Grid Item 3 - Center Main Image (3x3) -->
                  <div class="grid-item div3">
                    <!-- Main Image with Hotspots -->
                    <div class="slide-image-container">
                      {% if slide.main_image %}
                        <img
                          src="{{ slide.main_image | image_url: width: 1920 }}"
                          class="slide-image"
                          alt="{{ slide.title }}"
                          loading="lazy"
                          width="{{ slide.main_image.width }}"
                          height="{{ slide.main_image.height }}"
                        >
                      {% endif %}

                      <!-- Hotspots -->
                      {% if slide.hotspots.value %}
                        <div class="hotspots-container">
                          {% for hotspot_ref in slide.hotspots.value %}
                            {% assign product_ref = hotspot_ref.product_reference.value %}
                            {% if product_ref %}
                              <div
                                class="hotspot-btn"
                                data-hotspot-index="{{ forloop.index0 }}"
                                data-slide-index="{{ forloop.parentloop.index0 }}"
                                data-product-handle="{{ product_ref.handle }}"
                                style="
                                  --desktop-x: {{ hotspot_ref.desktop_x }}%;
                                  --desktop-y: {{ hotspot_ref.desktop_y }}%;
                                  --tablet-x: {{ hotspot_ref.tablet_x }}%;
                                  --tablet-y: {{ hotspot_ref.tablet_y }}%;
                                  --mobile-x: {{ hotspot_ref.mobile_x }}%;
                                  --mobile-y: {{ hotspot_ref.mobile_y }}%;
                                "
                                aria-label="View {{ hotspot_ref.name }}"
                              >
                                <span class="hotspot-icon">+</span>
                                {% if hotspot_ref.name %}
                                  <span class="hotspot-label">{{ hotspot_ref.name }}</span>
                                {% endif %}
                              </div>
                            {% endif %}
                          {% endfor %}
                        </div>
                      {% endif %}

                      <!-- Slide Content Overlay -->
                      <div class="slide-content-overlay">
                        {% if slide.title %}
                          <h1 class="slide-title">{{ slide.title }}</h1>
                        {% endif %}
                        {% if slide.subtitle %}
                          <p class="slide-subtitle">{{ slide.subtitle }}</p>
                        {% endif %}
                        {% if slide.button_text and slide.button_link %}
                          <div class="slide-actions">
                            <a href="{{ slide.button_link }}" class="slide-btn btn-primary">
                              {{ slide.button_text }}
                            </a>
                            <a href="{{ slide.button_link }}" class="slide-btn btn-secondary">ENQUIRE</a>
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  </div>

                  <!-- Small Images Swiper Container (Mobile Only) -->
                  <div class="grid-item mobile-swiper-container">
                    <div class="swiper mobile-small-images-swiper" data-slide-index="{{ forloop.index0 }}">
                      <div class="swiper-wrapper">
                        {% for item in slide.small_image.value %}
                          <div class="swiper-slide">
                            <img
                              src="{{ item | image_url: width: 400 }}"
                              class="grid-image"
                              alt="{{ slide.title }} - Small Image {{ forloop.index }}"
                              loading="lazy"
                              width="{{ item.width }}"
                              height="{{ item.height }}"
                            >
                          </div>
                        {% endfor %}
                      </div>
                      <div class="swiper-scrollbar"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>

        <!-- Navigation Arrows -->
        <div class="slide-navigation">
          <div class="slide-nav-btn slide-nav-prev swiper-button-prev" aria-label="Previous slide">
            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
              <foreignObject x="-40" y="-40" width="120" height="120"><div xmlns="http://www.w3.org/1999/xhtml" style="backdrop-filter:blur(20px);clip-path:url(#bgblur_0_230_1223_clip_path);height:100%;width:100%"></div></foreignObject><circle data-figma-bg-blur-radius="40" cx="20" cy="20" r="19.25" transform="matrix(-1 0 0 1 40 0)" stroke="white" stroke-width="1.5"/>
              <path d="M22.4482 13L15.3772 20.0711L22.4482 27.1421" stroke="white" stroke-width="1.5" stroke-linejoin="round"/>
              <defs>
              <clipPath id="bgblur_0_230_1223_clip_path" transform="translate(40 40)"><circle cx="20" cy="20" r="19.25" transform="matrix(-1 0 0 1 40 0)"/>
              </clipPath></defs>
            </svg>
          </div>
          <div class="slide-nav-btn slide-nav-next swiper-button-next" aria-label="Next slide">
            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
              <foreignObject x="-40" y="-40" width="120" height="120"><div xmlns="http://www.w3.org/1999/xhtml" style="backdrop-filter:blur(20px);clip-path:url(#bgblur_0_230_1226_clip_path);height:100%;width:100%"></div></foreignObject><circle data-figma-bg-blur-radius="40" cx="20" cy="20" r="19.25" stroke="white" stroke-width="1.5"/>
              <path d="M17.5518 13L24.6228 20.0711L17.5518 27.1421" stroke="white" stroke-width="1.5" stroke-linejoin="round"/>
              <defs>
              <clipPath id="bgblur_0_230_1226_clip_path" transform="translate(40 40)"><circle cx="20" cy="20" r="19.25"/>
              </clipPath></defs>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Product Popup Modal -->
    <div class="product-popup" data-popup-open="false">
      <div class="popup-overlay"></div>
      <div class="popup-content">
        <button class="popup-close" aria-label="Close popup">
          <p class="popup-close-text">Close</p>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>

        <div class="popup-body">
          <!-- Dynamic product content will be loaded here -->
        </div>
      </div>
    </div>
  </section>

  <!-- Preload Product Data -->
  <script type="application/json" data-showcase-products>
    {
      {% for slide in slides %}
        "slide-{{ forloop.index0 }}": [
          {% if slide.hotspots.value %}
            {% for hotspot_ref in slide.hotspots.value %}
              {% if hotspot_ref.product_reference.value %}
                {
                  "id": {{ hotspot_ref.product_reference.value.id | json }},
                  "title": {{ hotspot_ref.product_reference.value.title | json }},
                  "handle": {{ hotspot_ref.product_reference.value.handle | json }},
                  "price": {{ hotspot_ref.product_reference.value.price | json }},
                  "compare_at_price": {{ hotspot_ref.product_reference.value.compare_at_price | json }},
                  "available": {{ hotspot_ref.product_reference.value.available | json }},
                  "featured_image": {{ hotspot_ref.product_reference.value.featured_image | image_url: width: 800 | json }},
                  "url": {{ hotspot_ref.product_reference.value.url | json }},
                  "vendor": {{ hotspot_ref.product_reference.value.vendor | json }},
                  "description": {{ hotspot_ref.product_reference.value.description | strip_html | truncatewords: 30 | json }},
                  "hotspot_name": {{ hotspot_ref.name | json }}
                }{% unless forloop.last %},{% endunless %}
              {% endif %}
            {% endfor %}
          {% endif %}
        ]{% unless forloop.last %},{% endunless %}
      {% endfor %}
    }
  </script>

  <script>
    class InteractiveShowcase {
      constructor(container) {
        this.container = container;
        this.popup = container.querySelector('.product-popup');
        this.popupBody = this.popup.querySelector('.popup-body');
        this.mainSwiper = null;

        this.init();
      }

      init() {
        this.initMainSwiper();
        this.bindEvents();
      }

      initMainSwiper() {
        const swiperEl = this.container.querySelector('.main-slides-swiper');
        if (swiperEl) {
          this.mainSwiper = new Swiper(swiperEl, {
            slidesPerView: 1,
            spaceBetween: 0,
            navigation: {
              nextEl: '.swiper-button-next',
              prevEl: '.swiper-button-prev',
            },
            loop: false,
            allowTouchMove: true,
          });
        }
      }

      bindEvents() {
        // Hotspot clicks
        this.container.querySelectorAll('.hotspot-btn').forEach((btn) => {
          btn.addEventListener('click', (e) => this.handleHotspotClick(e));
        });

        // Popup controls
        const closeBtn = this.popup.querySelector('.popup-close');
        const overlay = this.popup.querySelector('.popup-overlay');

        if (closeBtn) {
          closeBtn.addEventListener('click', () => this.closePopup());
        }

        if (overlay) {
          overlay.addEventListener('click', () => this.closePopup());
        }

        // ESC key to close popup
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.popup.dataset.popupOpen === 'true') {
            this.closePopup();
          }
        });
      }

      async handleHotspotClick(e) {
        e.preventDefault();
        e.stopPropagation();

        const btn = e.currentTarget;
        const productHandle = btn.dataset.productHandle;
        const hotspotName = btn.querySelector('.hotspot-label')?.textContent || '';

        if (productHandle) {
          await this.loadProductData(productHandle, hotspotName);
          this.openPopup();
        }
      }

      async loadProductData(productHandle, hotspotName) {
        try {
          // Fetch product data from Shopify AJAX API
          const response = await fetch(`/products/${productHandle}.js`);
          const product = await response.json();

          this.updatePopupContent(product, hotspotName);
        } catch (error) {
          console.error('Error loading product data:', error);
          this.popupBody.innerHTML = `
            <div class="popup-error">
              <p>Error loading product information. Please try again.</p>
            </div>
          `;
        }
      }

      updatePopupContent(product, hotspotName) {
        this.popupBody.innerHTML = `
          <div class="popup-product">
            <div class="popup-product-grid">
              <div class="popup-product-image">
                <img src="${product.featured_image}" alt="${product.title}" loading="lazy">
              </div>
              
              <div class="popup-product-info">
                <div class="popup-header">
                  ${hotspotName ? `<h2 class="popup-product-subtitle">${hotspotName}</h2>` : ''}
                  <h3 class="popup-product-title">${product.title}</h3>
                </div>

                <div class="popup-product-description">
                  ${product.description}
                </div>
              </div>
            </div>
          </div>
        `;
      }

      openPopup() {
        this.popup.dataset.popupOpen = 'true';
        this.popup.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      }

      closePopup() {
        this.popup.dataset.popupOpen = 'false';
        this.popup.style.display = 'none';
        document.body.style.overflow = 'auto';
      }
    }

    // Initialize all showcases on page
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.interactive-showcase').forEach((showcase) => {
        new InteractiveShowcase(showcase);
      });
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Initialize Swiper only on mobile screens
      function initMobileSwipers() {
        if (window.innerWidth <= 1024) {
          const swipers = document.querySelectorAll('.mobile-small-images-swiper');

          swipers.forEach((swiperEl) => {
            // Destroy existing instance if any
            if (swiperEl.swiper) {
              swiperEl.swiper.destroy(true, true);
            }

            // Initialize new Swiper
            new Swiper(swiperEl, {
              slidesPerView: 3.5,
              spaceBetween: 3,
              freeMode: true,
              scrollbar: {
                el: '.swiper-scrollbar',
                draggable: true,
                dragSize: 'auto',
              },
              breakpoints: {
                320: {
                  slidesPerView: 2.5,
                  spaceBetween: 3,
                },
                480: {
                  slidesPerView: 4,
                  spaceBetween: 3,
                },
              },
            });
          });
        }
      }

      // Initialize on load
      initMobileSwipers();

      // Re-initialize on window resize
      let resizeTimer;
      window.addEventListener('resize', function () {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function () {
          initMobileSwipers();
        }, 250);
      });
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Interactive Showcase",
  "settings": [
    {
      "type": "paragraph",
      "content": "This section displays interactive slides from the collection's 'sasas' metafield. Configure the metafield in your collection settings."
    },
    {
      "type": "text",
      "id": "main_heading",
      "label": "Main Heading"
    },
    {
      "type": "text",
      "id": "main_subheading",
      "label": "Main Subheading"
    }
  ],
  "presets": [
    {
      "name": "Interactive Showcase"
    }
  ]
}
{% endschema %}
