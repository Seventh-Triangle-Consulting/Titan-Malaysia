 {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {%- if product.quantity_price_breaks_configured? -%}
    {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {%- endif -%}
 
<style>
  .mediarelativeimg{
      position: relative;
}
  .variants_buttoncustom {
    position: relative;
  }
   .tags {
        position: absolute;
        top: 1%;
        right: 1%;
        z-index: 998;
        width: 44%;
    }
  .discount-tag.discountnewtag {
position: absolute;
    top: 0;
    z-index: 9;
    right: 0;
  }
   .discount-tag.discountnewtag span {
        border-bottom-left-radius: 5px;
        font-weight: bold;
       background-color: #fff;
    opacity: 80%;
        height: 23px;
        width: 80px;
        text-align: left;
        display: flex;
        justify-content: center;
        align-items: center;
        color: #282728;
        font-size: 13px;
        font-family: "Inter-Medium";
        margin-left: 0;
    }
    .tags3.producttag {
        position: absolute;
       display: flex;
    width: 100%;
    gap: 10px;
    bottom: 0;
    left: 0;
    }
    span.badge-sold-out.badge.bg-secondary.position-absolute {
    top: 0;
    z-index: 999;
    background: #fff !important;
    opacity: 80%;
    color: #000000;
    width: 40%;
    height: 24px;
    font-family: "Inter-Medium";
}
   .producttag .back {
        width: 40%;
       border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        font-weight: bold;
      margin-right:0!important;
      background-color: #fff;
    opacity: 80%;
      margin: inherit;
      height:26px;
    }
   .product__media-icon  .icon{visibility:hidden;    margin-bottom: -130px;}
  .custom-product-bottomsider .product__media-icon  .icon{margin-bottom: -40px;}
  .videoosss img{height:auto !important;}
  .videoosss video{width:100%; height:100%;position:absolute;top: 0;display:none;object-fit:fill;}
.product__media-toggle {
    display: flex;
    border: none;
    background-color: transparent;
    color: currentColor;
    padding: 0;
}
  .imagesss img,.deferred-media__poster img{height:auto !important; }
    .deferred-media__poster{background:none;border:none;}
  .swiper-button-next:after, .swiper-rtl .swiper-button-prev:after,.swiper-button-prev, .swiper-rtl .swiper-button-next {
        width: 20px;
    height: 30px;
    padding: 16px;
    color: #000;
    font-size: 30px;}
  .swiper-button-prev:after, .swiper-rtl .swiper-button-next:after {
    font-size: 30px !important;
}
.text-end.wishlist-icons{position: absolute;right: 0px;top:0px;}
  .grid__item.product__media-wrapper{position:relative;}
  .swiper-button-next, .swiper-button-prev{top:50% !important;}
  .pdp.swiper-button-next:after{width:auto;height:auto;}
  .pdp.swiper-button-next{ width: 20px;height: 30px;padding: 16px;color: #000;font-size: 30px;}

media-gallery .swiper img{display: block;width: 100%;position:relative;height:auto;}
media-gallery .swiper .videoosss img{display: block;max-width: 100%;position: absolute !important;top: 0;left: 0;height: 100%;width: 100%;}
.product__media.media.media--transparent.gradient.global-media-settings {position: relative;}
.page-type-product .shopify-app-block {background: #FFF2D7;}
.product .container_wrapercustom #recipeCarousel .carousel-control-prev, .carousel-control-next {
    top: 50% !important;
    height: 50px !important;
}
  .swatchSlash {
    display: block !important;
    background: black;
    height: 0.1vw;
    position: absolute;
    width: 3vw;
    left: -10%;
    top: 48%;
    transform: rotate(35deg);
  }

  @media only screen and (max-width:1600px) {
    .swatchSlash {
      width: 3.5vw;
      left: -4%;
      top: 48%;
      transform: rotate(30deg);
    }
  }

  @media only screen and (max-width:1400px) {
    .swatchSlash {
      width: 3.8vw;
      left: -4%;
      top: 48%;
      transform: rotate(26deg);
    }
  }

  @media only screen and (max-width:1000px) {

    .variants_buttoncustom input[type="radio"]+label,
    .variants_buttoncustom label {
      width: 65px;
    }

    .swatchSlash {
      width: 7.5vw;
      left: -7%;
      top: 48%;
      transform: rotate(27deg);
    }
  }

  @media only screen and (max-width:800px) {
    .swatchSlash {
      width: 72px;
      left: -6%;
      top: 48%;
      transform: rotate(27deg);
    }
     .product__media-icon  .icon{visibility:hidden;    margin-bottom: -70px;}

  }



  .product .container_wrapercustom #recipeCarousel .carousel-control-prev,
  .carousel-control-next {
    top: 5%;
  }

  .selectSizeShow {
    display: none;
  }

  @media only screen and (max-width:787px) {

    .product .variantParent h1,
    p {
      font-size: 5.09vw !important;
    }
      .swiper-button-prev:after, .swiper-rtl .swiper-button-next:after {
    font-size: 18px !important;}
    .swiper-button-next:after, .swiper-rtl .swiper-button-prev:after, .swiper-button-prev, .swiper-rtl .swiper-button-next{font-size:18px !important;}
.thumbbottomslider{display:none;}
.swiper.custom-product-sider{padding-top:10px;}
    .swiper-button-next, .swiper-button-prev{top:50% !important;}
    .product .variantParent .variantSelector input[type=radio]+label,
    .variants_buttoncustom label {
      margin-top: 4%;
      padding: 3px 9px !important;
    }

    .product .product-right--content .form-wrapper .product-options .product-option {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      gap: 2.5%;
      margin-top: 2.4%;
      margin-bottom: 2.4%;
    }

    .product .variantParent .variantSelector h2 {
      font-size: 5.09vw !important;
      margin-top: 5% !important;
    }
  }

  /*    @media only screen and (max-width:600px){
      .swatchSlash{
        width: 7vw;
        left: -6%;
        top: 48%;
        transform: rotate(35deg);
        }
    } */

  @media only screen and (max-width:500px) {
    .product .product-right--content .form-wrapper .product-options .product-option {
      grid-template-columns: repeat(5, 1fr);
    }
.swiper.custom-product-sider {
    height: 120vw;}
    .swatchSlash {
      width: 72px;
      left: -8%;
      top: 51%;
      transform: rotate(30deg);
    }
  }

  @media only screen and (max-width:380px) {
    .product .product-right--content .form-wrapper .product-options .product-option {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  #sizevarError {
    display: none;
    color: red;
    margin: 0;
    opacity: 0.7;
  }

  .accordion-button {
    font-family: "Inter-Medium" !important;
  }

  .product .variantParent h1 {
    margin-top: 2%;
  }

  .product .variantParent h1,
  p {
    font-family: 'AvenirLTStd Black';
    font-size: 1.09vw;
    line-height: 25px;

  }

  .product .variantParent .variant-heading {
    display: flex;
    align-items: baseline;
    gap: 3%;
  }

  .product .variantParent .variantSelector h2 {
    font-size: 1.09vw;
    line-height: 25px;
    font-family: 'AvenirLTStd Black';
    margin-top: 2%;
  }

  .product .variantParent .variantSelector input {
    position: absolute;
    visibility: hidden;
  }

  .product .variantParent .variantSelector input[type=radio]:checked+label {
    border: 1px solid #231F20;
    background: #6EB3BC;
    color: #ffffff;
    border-radius: 5px;
  }

  .product .variantParent .variantSelector input[type=radio]:disabled+label {
    opacity: 30%;
  }

  .product .variantParent .variantSelector input[type=radio]+label,
  .variants_buttoncustom label {
    color: #231F20;
    font-family: 'AvenirLTStd Roman';
    min-width: 50px;
    border: 1px solid #231F20;
    text-align: center;
    background: transparent;
    border-radius: 5px;
    margin-right: 1.5%;
  }

  .product .customATCSets {
    margin-bottom: 2%;
    margin-top: 3%;
  }

  .product .variantParent .variantSelector input[type=radio]+label,
  .variants_buttoncustom label {
    padding: 2px 8px;
  }
 
      @media only screen and (max-width:500px) {
      .discount-tag span {
    top: 10px;
  }
        .mediarelativeimg{
      position: unset;
}
 .tags3.producttag {
      bottom: 4.5px;
    }
         .discount-tag.discountnewtag {
    top: 10px;
  }
    .back {
    border-bottom-left-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
}
      }
</style>

{% liquid
assign pt = section.settings.pt | prepend: 'pt-4 pt-sm-'
assign pb = section.settings.pb | prepend: 'pb-'
assign mt = section.settings.mt | prepend: 'mt-'
assign mb = section.settings.mb | prepend: 'mb-'

assign current_variant = product.selected_or_first_available_variant
assign current_media_pos = current_variant.featured_media.position | default: 1

assign img_width = 900
assign img_height = 900
assign img_thumbnail = 'img-thumbnail'
%}

<section id="template-product" class="product {{ pt }} {{ pb }} {{ mt }} {{ mb }}">
  <div class="container-fluid">
    <div class="row">
      <div class="col-lg-4 mb-4 mb-lg-0 ">
        <div class="grid__item product__media-wrapper">
           <media-gallery id="MediaGallery-{{ section.id }}" role="region" class="{% if section.settings.enable_sticky_info %}product__media-gallery{% endif %} mediarelativeimg"aria-label="{{ 'products.product.media.gallery_viewer' | t }}" data-desktop-layout="{{ section.settings.gallery_layout }}">
        <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>
          <a class="skip-to-content-link button visually-hidden quick-add-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          <ul id="Slider-Gallery-{{ section.id }}" class="swiper custom-product-sider product__media-list contains-media grid grid--peek list-unstyled slider slider--mobile" role="list">
           <div class="swiper-wrapper">
            {%- liquid
              assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
              assign media_count = product.media.size
              if section.settings.hide_variants
                assign media_count = media_count | minus: variant_images.size | plus: 1
              endif

              if section.settings.media_size == 'large'
                assign media_width = 0.65
              elsif section.settings.media_size == 'medium'
                assign media_width = 0.55
              elsif section.settings.media_size == 'small'
                assign media_width = 0.45
              endif
            -%}

{% assign mediaSize = product.media.size %}
             
            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
            <div class="swiper-slide">
              <li id="Slide-{{ section.id }}-{{ featured_media.id }}" class="product__media-item grid__item slider__slide is-active{% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ featured_media.id }}">
                {%- assign media_position = 1 -%}
                {% render 'product-thumbnail', media: featured_media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: false,forloop:forloop.index %}
              </li>
             </div>
            {%- endif -%}
             
            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
              <div class="swiper-slide">
                <li id="Slide-{{ section.id }}-{{ media.id }}" class="product__media-item grid__item slider__slide{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {%- assign media_position = media_position | default: 0 | plus: 1 -%}
                  {% render 'product-thumbnail', media: media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: true ,forloop:forloop.index %}
                </li>
             </div>
              {%- endunless -%}
            {%- endfor -%}
             {% if product.selected_or_first_available_variant.featured_media == null and mediaSize < 1 %}
               <img src="https://cdn.shopify.com/s/files/1/0591/3853/9577/files/product_image_1.jpg?v=1652795593">
              {%endif%}

            </div>
            <!-- If we need navigation buttons -->
  <div class="pdp swiper-button-prev">{%render 'icon-arrow-prev' %}</div>
  <div class="pdp swiper-button-next">{%render 'icon-arrow-next' %}</div>

          </ul>
              {% unless product.available %}
            {% unless product.tags contains "Bundle" %}
                <span class="badge-sold-out badge bg-secondary position-absolute">
                    {{ 'product.sold_out' | t }}
                </span>
            {% endunless %}
        {% endunless %}
       
            {% if comboCmpPrice > 0 and comboCmpPrice > comboPrice %}
              <div class="discount-tag updated-tag">
                  <span>
                    {{-
                    comboCmpPrice
                    | minus: comboPrice
                    | times: 1.0
                    | divided_by: comboCmpPrice
                    | times: 100
                    | floor
                    -}}% OFF
                  </span>
              </div>
            {% else %}
            
                {% if  product.selected_or_first_available_variant.compare_at_price != blank %}
                    {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
                        <div class="discount-tag discountnewtag">
                            <span>{{ product.selected_or_first_available_variant.compare_at_price | minus:product.selected_or_first_available_variant.price |times:1.0 | divided_by:product.selected_or_first_available_variant.compare_at_price   | times: 100 | floor }}% OFF</span>
                        </div>
                    {% endif %}
                {% endif %}
            {% endif %}

            <!--         third-one -->
           {% assign product_tags = product.tags | join: ' ' %}


    <div class="tags3 producttag">
  {% if product_tags contains 'Black' %}
        {% render 'Tags-NewArrivals-collection' %}
{% endif %}
         {% if product_tags contains 'beige' %}
                {% render 'Tags-Bestseller-collection' %}
           {% endif %}
      
    </div>
  

        {%- if first_3d_model -%}
          <button
            class="button button--full-width product__xr-button"
            type="button"
            aria-label="{{ 'products.product.xr_button_label' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {% render 'icon-3d-model' %}
            {{ 'products.product.xr_button' | t }}
          </button>
        {%- endif -%}
           </media-gallery>
   		 <media-gallery id="MediaGallery-{{ section.id }}"  class="thumbbottomslider" role="region" {% if section.settings.enable_sticky_info %}class="product__media-gallery"{% endif %} aria-label="{{ 'products.product.media.gallery_viewer' | t }}" data-desktop-layout="{{ section.settings.gallery_layout }}">
        <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>
          <a class="skip-to-content-link button visually-hidden quick-add-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          <ul id="Slider-Gallery-{{ section.id }}" class="swiper custom-product-bottomsider product__media-list contains-media grid grid--peek list-unstyled slider slider--mobile" role="list">
           <div class="swiper-wrapper">
            {%- liquid
              assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
              assign media_count = product.media.size
              if section.settings.hide_variants
                assign media_count = media_count | minus: variant_images.size | plus: 1
              endif

              if section.settings.media_size == 'large'
                assign media_width = 0.65
              elsif section.settings.media_size == 'medium'
                assign media_width = 0.55
              elsif section.settings.media_size == 'small'
                assign media_width = 0.45
              endif
            -%}

{% assign mediaSize = product.media.size %}
             
            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
            <div class="swiper-slide">
              <li id="Slide-{{ section.id }}-{{ featured_media.id }}" class="product__media-item grid__item slider__slide is-active{% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ featured_media.id }}">
                {%- assign media_position = 1 -%}
                {% render 'product-thumbnail-bottom', media: featured_media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: false , forloop :forloop.index %}
              </li>
             </div>
            {%- endif -%}
             
            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
              <div class="swiper-slide">
                <li id="Slide-{{ section.id }}-{{ media.id }}" class="product__media-item grid__item slider__slide{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {%- assign media_position = media_position | default: 0 | plus: 1 -%}
                  {% render 'product-thumbnail-bottom', media: media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: true,forloop :forloop.index %}
                </li>
             </div>
              {%- endunless -%}
            {%- endfor -%}
             {% if product.selected_or_first_available_variant.featured_media == null and mediaSize < 1 %}
               <img src="https://cdn.shopify.com/s/files/1/0591/3853/9577/files/product_image_1.jpg?v=1652795593">
              {%endif%}
            </div>
           
 <div  class="pdp swiper-button-prev">{%render 'icon-arrow-prev' %}</div>
  <div  class="pdp swiper-button-next">{%render 'icon-arrow-next' %}</div>

          </ul>
         
        {%- if first_3d_model -%}
          <button
            class="button button--full-width product__xr-button"
            type="button"
            aria-label="{{ 'products.product.xr_button_label' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {% render 'icon-3d-model' %}
            {{ 'products.product.xr_button' | t }}
          </button>
        {%- endif -%}
           </media-gallery>
  </div>
      </div>

      <div class="col-lg-8 product-right--content">
        <h1 class="title mb-3 {{ section.settings.title_size }} product-title">
          {{ product.title }}
        </h1>
       
       
        <div class="sub-description dwdw">{{ product.metafields.description.subtitle }}</div>
        <div class="ga-reviews">
          {% comment %}Start - Contlo widget{% endcomment %}
{% render 'contlo_widgets', widget_type: 'pdp_review_badge', product: product %}
{% comment %}End - Contlo widget{% endcomment %}
        </div>
        <div class="product-price fs-5">
          {% assign metaContent = product.metafields.custom.variantcombination.value %}
          {% assign comboPrice = 0 %}
          {% assign comboCmpPrice = 0 %}
          {% for meta in product.metafields.custom.variantcombination.value %}
            {% assign splittedValue = meta | split: '##' %}
            {% assign comboVariant = all_products[splittedValue[0]] %}
            {% assign comboPrice = comboPrice | plus:comboVariant.selected_or_first_available_variant.price %}
            {% assign comboCmpPrice = comboCmpPrice | plus:comboVariant.selected_or_first_available_variant.compare_at_price %}
          {% endfor %}
          {% if comboPrice > 0 %}
          <span
            class="product-price-final {% if comboCmpPrice > comboPrice %}text-success{% endif %}">
            {{ comboPrice | money }}
          </span>
          
          <span class="product-price-compare text-muted me-1"
            style="{% unless comboCmpPrice > comboPrice %}display: none{% endunless %}">
            <span class="visually-hidden">
              {{ comboPrice | money }}
            </span>
            {% if comboCmpPrice > 0 and comboCmpPrice > comboPrice %}
              <s>{{ comboCmpPrice | money }}</s>
            {% endif %}
          </span>
          {% comment %} x% off code {% endcomment %}
          {% if comboCmpPrice > 0 and comboCmpPrice > comboPrice %}
            <span class="new-bg"
              style="{% unless comboCmpPrice > comboPrice %}display: none{% endunless %}">
              (
              {{-
              comboCmpPrice
              | minus: comboPrice
              | times: 1.0
              | divided_by: comboCmpPrice
              | times: 100
              | floor
              -}}
              % OFF)
            </span>
          {% endif %}
          {% else %}
          <span
            class="product-price-final {% if current_variant.compare_at_price > current_variant.price %}text-success{% endif %}">
            {{ current_variant.price | money }}
          </span>
          
          <span class="product-price-compare text-muted me-1"
            style="{% unless current_variant.compare_at_price > current_variant.price %}display: none{% endunless %}">
            <span class="visually-hidden">
              {{ 'product.regular_price' | t }}
            </span>
            <s>{{ current_variant.compare_at_price | money }}</s>
          </span>
          {% comment %} x% off code {% endcomment %}

          <span class="new-bg"
            style="{% unless current_variant.compare_at_price > current_variant.price %}display: none{% endunless %}">
            (
            {{-
            product.selected_or_first_available_variant.compare_at_price
            | minus: product.selected_or_first_available_variant.price
            | times: 1.0
            | divided_by: product.selected_or_first_available_variant.compare_at_price
            | times: 100
            | floor
            -}}
            % OFF)
          </span>
          {% endif %}
        </div>

        <div class="tax-info">(Inclusive of all taxes)</div>

        <hr class="feat-hr" style=" border: 1px solid #33313B">
      {%  if product.metafields.custom.product_feature_icons.value != blank %}

        {% if product.metafields.custom.product_features.value != blank %}
        {% assign feature = product.metafields.custom.product_features.value %}
        {% assign feature_icon = product.metafields.custom.product_feature_icons.value %}
        {% assign sizes = feature.size | minus: 1 %}
        <div class="product-features">
          <div class="row">
            {% for x in (0..sizes) %}
            {% assign count = forloop.index | modulo: 2 %}
            {% if forloop.last and count != 0 %}
            <div class="col-10" style="text-align:center;">
              <div class="info-block" style="width:100%;">
                {% comment %} <img src="{{ feature_icon[x] }}" alt="{{ feature[x] }}" width="71px" height="65px"
                  loading="lazy" />{% endcomment %}
                {% assign imageName = feature_icon[x] | split: '/' | last %}
                {% assign meta_image = imageName | split: '?' | first %}
                <img class="img-fluid feature-icon" srcset="
                          {%- if meta_image.width >= 165 -%}{{ meta_image | file_img_url: '165x' }} 165w,{%- endif -%}
                          {%- if meta_image.width >= 360 -%}{{ meta_image | file_img_url: '360x' }} 360w,{%- endif -%}
                          {%- if meta_image.width >= 535 -%}{{ meta_image | file_img_url: '535x' }} 535w,{%- endif -%}
                          {%- if meta_image.width >= 750 -%}{{ meta_image | file_img_url: '750x' }} 750w,{%- endif -%}
                          {%- if meta_image.width >= 1070 -%}{{ meta_image | file_img_url: '1070x' }} 1070w,{%- endif -%}
                          {%- if meta_image.width >= 1500 -%}{{ meta_image | file_img_url: '1500x' }} 1500w,{%- endif -%}
                          {{ meta_image | file_img_url: 'master' }} {{ meta_image.width }}w
                        " src="{{ meta_image | file_img_url: '1500x' }}" sizes="100vw"
                  alt="{{ meta_image.alt | escape }}" loading="lazy" width="100%" height="100%">
                <span class="feature-title">{{ feature[x] }}</span>
              </div>
            </div>
            {% else %}
            <div class="col-6  col-md-6">
              <div class="d-flex info-block">
                {% comment %} <img src="{{ feature_icon[x] }}" alt="{{ feature[x] }}" width="71px" height="65px"
                  loading="lazy" />{% endcomment %}
                {% assign imageName = feature_icon[x] | split: '/' | last %}
                {% assign meta_image = imageName | split: '?' | first %}
                <img class="img-fluid feature-icon" srcset="
                          {%- if meta_image.width >= 165 -%}{{ meta_image | file_img_url: '165x' }} 165w,{%- endif -%}
                          {%- if meta_image.width >= 360 -%}{{ meta_image | file_img_url: '360x' }} 360w,{%- endif -%}
                          {%- if meta_image.width >= 535 -%}{{ meta_image | file_img_url: '535x' }} 535w,{%- endif -%}
                          {%- if meta_image.width >= 750 -%}{{ meta_image | file_img_url: '750x' }} 750w,{%- endif -%}
                          {%- if meta_image.width >= 1070 -%}{{ meta_image | file_img_url: '1070x' }} 1070w,{%- endif -%}
                          {%- if meta_image.width >= 1500 -%}{{ meta_image | file_img_url: '1500x' }} 1500w,{%- endif -%}
                          {{ meta_image | file_img_url: 'master' }} {{ meta_image.width }}w
                        " src="{{ meta_image | file_img_url: '1500x' }}" sizes="100vw"
                  alt="{{ meta_image.alt | escape }}" loading="lazy" width="100%" height="100%">
                <span class="feature-title">{{ feature[x] }}</span>
              </div>
            </div>
            {% endif %}
            {% endfor %}
          </div>
        </div>
        <hr class="feat-hr" style=" border: 1px solid #33313B">
          
        {% endif %}
         {% else %}
          <div class="product-features">
          <div class="row">
           {% for featureimage in product.metafields.custom.product_features.value %}
              {% assign count = forloop.index | modulo: 2 %}
            {% if forloop.last and count != 0 %}
  {% assign imageFileName = featureimage | append:'.png' | downcase  | replace: ' ' ,'-' %}
      
   {% assign imgURL =  imageFileName | file_url  %}
              <div class="col-10" style="text-align:center;">
              <div class="info-block" style="width:100%;">
                   <img class="img-fluid feature-icon" src="{{imgURL }}" sizes="100vw"
                  alt="{{ imgURL.alt | escape }}" loading="lazy" width="100%" height="100%"  />  
                     <span class="feature-title">{{ product.metafields.custom.product_features.value[forloop.index0] }}</span>
                </div>
              </div>
               {% else %}
              {% assign imageFileName = featureimage | append:'.png' | downcase  | replace: ' ' ,'-' %}
      
   {% assign imgURL =  imageFileName | file_url  %}
               <div class="col-6  col-md-6">
              <div class="d-flex info-block">
              <img class="img-fluid feature-icon" src="{{imgURL }}" sizes="100vw"
                  alt="{{ imgURL.alt | escape }}" loading="lazy" width="100%" height="100%" />  
                     <span class="feature-title">{{ product.metafields.custom.product_features.value[forloop.index0] }}</span>
                </div>
              </div>
               {% endif %}
             {% endfor %}
         </div>
         </div>
          <hr class="feat-hr" style=" border: 1px solid #33313B">
            
         {% endif %}
        <div class="form-wrapper mb-6  variant----size-chart---div">
          {% form 'product', product, onsubmit: 'onSubmitAtcForm(this, event)' %}
          <input type="hidden" name="id" value="{{ current_variant.id }}">
          {% assign bundval = 0 %}
          {% for tag in product.tags %}
          {% if tag == 'Bundle' %}
          {% assign bundval = 1 %}
          {% endif %}
          {% endfor %}
          {% unless product.has_only_default_variant %}
          <div class="product-options list-unstyled overflow-hidden" aria-label="{{ 'product.product_options' | t }}">
            {% for option in product.options_with_values %}
            {% if option.name == 'color' or option.name == 'Color' %}
            {% if product.metafields.custom.color_swatch.value != blank %}
            <label class="SwatchLabel font-inter-Med variantlabel px-0 d-flex swatch-labels"
              for="product-option-{{ option.name | handleize }}">
              <span>{{ option.name }}:</span><span class="selected---variant">{{ option.selected_value }}</span>
            </label>

            <div
              class="product-option selection_option-{{ forloop.index }} myclass{% if forloop.index0==0 %} active{% endif %} "
              lala="{{ product.metafields.custom.color_swatch.value | size }}">
              {% for x in product.metafields.custom.color_swatch.value %}
              {% assign han = product.metafields.custom.color_handle.value[forloop.index0] %}
              {% assign xdown = x | downcase %}
              {% assign taghand = settings.product_colors_swatch | split: ',' %}
              {% assign handsize = taghand.size | minus: 1 %}
              {% for i in (0..handsize) %}
              {% assign handdata = taghand[i] | split: ':' %}
              {% assign colorName = handdata[0] | downcase %}
              {% if xdown == colorName %}
              {% assign multColor = handdata[1] | split: '$' %}
              {% assign colorsizes = multColor.size | minus: 1  %}
              <div class="variants_buttoncustom swatchesfont  color-swatch" {% if colorsizes > 0  %} id="muticolor-variant" {% endif %}>
                <input qty="{{ product.variants[forloop.index0].inventory_quantity }}" type="radio"
                {% if forloop.first %}  checked="true" {% endif %}
                  id="product-option-{{ option.name | handleize }}-{{ forloop.index }}" class="forselectbuttonvalue"
                  data-product-handle="{{ product.handle }}" onclick="onChangeProductOption(this, event)"
                  name="{{option.name}}" value="{{ product.variants[0].option2 }}" {% if han==product.handle %}
                  checked="true" {% endif %}>
                  {% if colorsizes ==0 %}
                    <label for="product-option-{{ option.name | handleize }}-{{ forloop.index }}"
                    onclick="location.href='/products/{{han}}';" data-color="{{ colorvalue[0] }}" class="option-name" {%
                    if checkvaravail==false %} disabled {% endif %} style="background-color:{{ multColor[0] }};">
                  </label>
                  {% else %}
                    <label for="product-option-{{ option.name | handleize }}-{{ forloop.index }}"
                    onclick="location.href='/products/{{han}}';" data-color="{{ colorvalue[0] }}" class="option-name" {%
                    if checkvaravail==false %} disabled {% endif %} style="background: linear-gradient(90deg, {% for i in (0..colorsizes) %}{{ multColor[i] }} 50% {% unless forloop.last %},{% endunless %} {% endfor %} );">
                  </label>
                  {% endif %}
    
              </div>
              {% break %}
              {% endif %}
              {% endfor %}
              {% endfor %}
            </div>
            {% else %}
            <label class="SwatchLabel font-inter-Med variantlabel px-0 d-flex swatch-labels"
              for="product-option-{{ option.name | handleize }}">
              <span>{{ option.name }}:</span><span class="selected---variant">{{ option.selected_value }}</span>
            </label>

            <div
              class="product-option selection_option-{{ forloop.index }} myclass{% if forloop.index0==0 %} active{% endif %} ">
              {% for value in option.values %}
              {% for variant in product.variants %}
              {% if value == variant.title %}
              {% assign checkvaravail = variant.available %}
              {% break %}
              {% endif %}
              {% endfor %}
              {% if option.name == 'color' or option.name == 'Color' %}
              {% assign colors = settings.product_colors_swatch | split: ',' %}

              {% assign sizes = colors.size | minus: 1 %}
              {% endif %}
              <div class="variants_buttoncustom swatchesfont ">
                <input qty="{{ product.variants[forloop.index0].inventory_quantity }}" type="radio"
                  id="product-option-{{ option.name | handleize }}-{{ forloop.index }}" class="forselectbuttonvalue"
                  data-product-handle="{{ product.handle }}" onclick="onChangeProductOption(this, event)"
                  name="{{option.name}}" value="{{value}}" {% if value==option.selected_value %} checked {% endif %}>
                <label for="product-option-{{ option.name | handleize }}-{{ forloop.index }}" class="option-name" {% if
                  checkvaravail==false %} disabled {% endif %} {% if option.name=='color' or option.name=='Color' %} {%
                  endif %}>
                  {{ value }}
                </label>
              </div>
              {% endfor %}
            </div>
            {% endif %}
            {% else %}
            {% if bundval != 1 %}
            <label class="SwatchLabel font-inter-Med variantlabel px-0 d-flex swatch-labels"
              for="product-option-{{ option.name | handleize }}">
              <span>{{ option.name }}:</span><span class="selected---variant">{{ option.selected_value }}</span>
            </label>

            <div
              class="product-option selection_option-{{ forloop.index }} myclass{% if forloop.index0==0 %} active{% endif %} ">
              {% for value in option.values %}
              {% for variant in product.variants %}
              {% if value == variant.title %}
              {% assign checkvaravail = variant.available %}
              {% break %}
              {% endif %}
              {% endfor %}
              {% if option.name == 'color' or option.name == 'Color' %}
              {% assign colors = settings.product_colors_swatch | split: ',' %}

              {% assign sizes = colors.size | minus: 1 %}
              {% endif %}
              <div class="variants_buttoncustom swatchesfont ">
                <input qty="{{ product.variants[forloop.index0].inventory_quantity }}" type="radio"
                  id="product-option-{{ option.name | handleize }}-{{ forloop.index }}" class="forselectbuttonvalue"
                  data-product-handle="{{ product.handle }}" onclick="onChangeProductOption(this, event)"
                  name="{{option.name}}" value="{{value}}" {% if value==option.selected_value %} checked {% endif %}>
                <label {% if product.variants[forloop.index0].inventory_quantity==0 %}
                  style="opacity:0.6;cursor: no-drop;" {% endif %}
                  for="product-option-{{ option.name | handleize }}-{{ forloop.index }}" class="option-name" {% if
                  checkvaravail==false %} disabled {% endif %} {% if option.name=='color' or option.name=='Color' %} {%
                  endif %}>
                  {% if product.variants[forloop.index0].inventory_quantity == 0 %}
                  <div class="swatchSlash"> </div>
                  {% endif %}
                  {{ value }}
                </label>
              </div>
              {% endfor %}
               
            </div>
            {% endif %}
            {% endif %}
            {% endfor %}
          
            {% if product.options contains 'Size' %}
            {% if section.settings.show_size_chart %}
            {% render 'size-chart' %}
            {% endif %}
            {% endif %}
          </div>
          {% endunless %}

          {% if product.tags contains 'Bundle' %}
          {% for val in product.metafields.custom.variantcombination.value %}
          {% assign valarr = val | split: '##' %}
          {% assign productVal = all_products[valarr[0]] %}
          <div class="variantParent size-{{ forloop.index0 }}">
            
           {% if product.tags contains 'Co-ord Size' %}
                <div class="sizechart">
                  {% if section.settings.show_size_chart %}
                    {% render 'size-chart' %}
                  {% endif %}
                </div>
           {% endif %}

            <h1>{{ valarr[1] }}</h1>

            {% comment %}
            {% if forloop.index0 == 0 %}
            <h1>Top Size</h1>
            {% else %}
            <h1>Bottom Size</h1>
            {% endif %}
            <div class="variant-heading">
              <h1>{{ productVal.title }}</h1>
              <p class="priceChange">Price : {{ productVal.first_available_variant.price | money }}</p>
            </div>
            {% endcomment %}

            {% assign checkVal = true %}
            {% assign checkSubVal = true %}
            <select class="mainValueSelector" style="display: none">
              {% for variant in productVal.variants %}
              <option data-prod="{{ productVal.id }}" value="{{ variant.title }}" data-id="{{ variant.id }}"
                data-price="{{ variant.price | money | strip_html }}" {% if checkVal and variant.available %} selected
                {% assign checkVal=false %} {% endif %} {% unless variant.available %} disabled {% endunless %}>
                {{ variant.title }}
              </option>
              {% endfor %}
            </select>

            {% for option in productVal.options_with_values %}
            <div class="variantSelector {{ option.name }}">
              {% for value in option.values %}
              {% if option.name=='color' or option.name =='Color' %} {% continue %} {% endif %} 
              {% assign count = forloop.index | minus: 1 %}
              <input
                onchange="firePriceChange()"
                var-cmp="{{ productVal.variants[forloop.index0].compare_at_price }}"
                var-price="{{ productVal.variants[forloop.index0].price }}"
                {% if option.name=='color' or option.name=='Color' %} style="display: none;" {% endif %}
                id="product-{{ productVal.id }}-{{ option.name | handleize }}{{ forloop.index }}" type="radio"
                class="subValueSelector" value="{{ value }}" name="{{ option.name }}_{{ productVal.id }}"
                data-option="{{ option.name }}" title="{{ productVal.variants[count].title }}" {% if checkSubVal and
                productVal.variants[count].available %} checkeding {% assign checkSubVal=false %} {% endif %} {% if
                option.values.size> 1 %}
              {% unless productVal.variants[count].available %}disabled{% endunless %}
              {% else %}
              checked
              {% endif %}
              >
              <label {% if option.name=='color' or option.name=='Color' %} style="display: none;" {% endif %}
                for="product-{{ productVal.id }}-{{ option.name | handleize }}{{ forloop.index }}" class="option-name"
                data-id="{{ productVal.id }}" data-name="{{ value | strip }}" onClick="onVariantChange(this)">
                {{ value }}
              </label>
              {% endfor %}
            </div>
            {% endfor %}
            <p style="color:red;padding-top: 1%;" class="selectSizeShow">Please select size</p>
          </div>
          {% endfor %}
{% for collection in product.collections %}
  
         {%  if collection.title == 'Cotton Fabric' or collection.title == 'Feather Feel Fabric' or collection.title == 'Second skin fabric' or collection.title == 'Max Dry Fabric' %}
<span class="shopallcolortext">  {{ collection.title }} : <a href="{{ collection.url }}"> Shop All </a> </span>
            {% endif %}
         {% endfor %}
          <button class="customATCSets btn-atc btn w-100 add-to-cart-btn text-center" type="button"
            data-text="{{ 'product.add_to_cart' | t }}">
            {{ 'product.add_to_cart' | t }}
          </button>
 
          {% else %}
             {% for collection in product.collections %}   
              
         {%  if collection.title == 'Cotton Fabric' or collection.title == 'Feather Feel Fabric' or collection.title == 'Second skin fabric' or collection.title == 'Max Dry Fabric' %}
<span class="shopallcolortext">  {{ collection.title }} : <a href="{{ collection.url }}">  Shop All  </a> </span>
            {% endif %}
         {% endfor %}
          <div class="text-left quantity-text">Qty:</div>
          <div class="mb-6 quantity-addtocart-btn">
            <div class="quality">
              <span onclick="decrement()" class="control-btn">-</span>
              <input class="form-control quantity-input" type="number" name="quantity" value="1" min="1"
                aria-label="{{ 'product.quantity' | t }}" id="demoInput">
              <span onclick="increment()" class="control-btn">+</span>
            </div>

            {% comment %}
            <input class="form-control me-3" type="number" name="quantity" value="1"
              aria-label="{{ 'product.quantity' | t }}" style="max-width: 90px;">
            {% endcomment %}
            <button class="btn-atc btn w-100 add-to-cart-btn text-center" type="submit" name="add"
              data-text="{{ 'product.add_to_cart' | t }}" {% unless current_variant.available %} disabled {% endunless
              %}>
              {% if current_variant.available %}
              {{ 'product.add_to_cart' | t }}
              {% else %}
              {{ 'product.sold_out' | t }}
              {% endif %}
            </button>
          </div>
          {% endif %}
          {% comment %}
          <button class="btn-buy btn  w-100 buy-now-btn text-center" type="button" name="buy"
            onclick="onClickBuyBtn(this, event)" {% unless current_variant.available %} disabled {% endunless %}>
            {% if current_variant.available %}
            {{ 'product.buy_it_now' | t }}
            {% else %}
            {{ 'product.sold_out' | t }}
            {% endif %}

          </button>
          {% endcomment %}
          {% endform %}
        </div>
        <!-- ======================  shop the loop div  ======================= -->
        <div id="ShopTheLook-section"></div>
        <!-- ======================  end of shop the loop div  ======================= -->

        <div class="product-other-info">
        
         
           {% if product.metafields.custom.uspiconimage.value != blank %}
          <div class="row">
            {% for uspimg in product.metafields.custom.uspiconimage.value %}
            <div class="col-4">
              <div class="info-flex--block">
                <img src="{{ uspimg | image_url}}" class="img-fluid after-buy-now-icon">
                <div class=" text-left other-info">{{ product.metafields.custom.uspicontext.value[forloop.index0] }}</div>
              </div>
            </div>           
            {% endfor %}
          </div>
   {% else %}
             <div class="row">
            {% if section.settings.Show_other_info %}
            <div class="col-4">
              <div class="info-flex--block">
                <img src="{{ section.settings.icon_image1 | img_url: ''}}" class="img-fluid after-buy-now-icon">
                <div class=" text-left other-info">{{ section.settings.info_title1 }}</div>
              </div>
            </div>
            <div class="col-4">
              <div class=" info-flex--block">
                <img src="{{ section.settings.icon_image2 | img_url: ''}}" class="img-fluid after-buy-now-icon">
                <div class=" text-left other-info">{{ section.settings.info_title2 }}</div>
              </div>
            </div>
            <div class="col-4">
              <div class=" info-flex--block">
                <img src="{{ section.settings.icon_image3 | img_url: ''}}" class="img-fluid after-buy-now-icon">
                <div class=" text-left other-info">{{ section.settings.info_title3 }}</div>
              </div>
            </div>
            {% endif %}
          </div>
            {% endif %}
        </div>
        <div id="product-accordion" class="accordion mb-5">
          <div class="accordion-item">
            <h3 id="product-blocks-heading" class="accordion-header  mb-0  ">
              <button class="accordion-button collapsed offer-accordion" type="button" data-bs-toggle="collapse"
                data-bs-target="#product-blocks-collapse" aria-expanded="true" aria-controls="product-blocks-collapse"
                style="box-shadow: none;">
                {{ section.settings.show_offer_title }}
              </button>
            </h3>
            <div id="product-blocks-collapse" class="accordion-collapse collapse show"
              aria-labelledby="product-blocks-heading">
              <div class="accordion-body scroll-offer">
                {% for block in section.blocks %}
                {% if block.type == 'offer' %}
                {% if section.settings.show_offer_btn %}
                <div class="rte offer-block" id="{{ block.id }}">
                  <div class="offer-detail-block" style="background:{{ block.settings.body_color }}">
                    <div class="offer-head d-flex">
                      <img src="{{ block.settings.icon_image_offer | img_url:'' }} " class="img-fluid" loading="lazy">
                      <span class="offer-title" style="color:{{ block.settings.tilcolor }}">
                        {{ block.settings.title -}}
                      </span>
                      <span class="copy-text">COPY CODE</span>
                    </div>
                    <div class="offer-body" style="color:{{ block.settings.colroffcont}}">
                      {{ block.settings.info_details }}
                    </div>
                  </div>
                </div>
                {% endif %}
                {% endif %}
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- sticky add to cart -->
{% if bundval != 1 %}
<div class="container-fluid row sticky-addtocart">
  <div class="col-xs-12 col-sm-6">
    <div class="d-flex sticky-addtocart-mob-productDetail">
      <img src="{{ product.featured_image | img_url:'' }}" width="50px" height="50px"
        class="sticky-addtocart--product-image">
      <div class=" product-title--price-block">
        <div class="sticky-addtocart--product-title">{{ product.title }}</div>
        <div class="sticky-addtocart--product-price">
          <span
            class="sticky-addtocart--product-price-final {% if current_variant.compare_at_price > current_variant.price %}text-success{% endif %}">
            {{ current_variant.price | money_with_currency }}
          </span>
          <span class="regular-price---offer">
            <span class="sticky-addtocart--product-price-compare text-muted me-1"
              style="{% unless current_variant.compare_at_price > current_variant.price %}display: none{% endunless %}">
              <span class="visually-hidden">
                {{ 'product.regular_price' | t }}
              </span>
              {{ current_variant.compare_at_price | money_with_currency }}
            </span>
            {% comment %} x% off code {% endcomment %}

            <span class="sticky-addtocart--new-bg"
              style="{% unless current_variant.compare_at_price > current_variant.price %}display: none{% endunless %}">
              (
              {{-
              product.selected_or_first_available_variant.compare_at_price
              | minus: product.selected_or_first_available_variant.price
              | times: 1.0
              | divided_by: product.selected_or_first_available_variant.compare_at_price
              | times: 100
              | floor
              -}}
              % OFF)
            </span>
          </span>
        </div>
      </div>
    </div>
  </div>
  <div class="col-xs-12 col-sm-6">
    <div class="form-wrapper  sticky-form mb-6 d-flex">
      <div class=" sticky--atc--dflex--block d-flex" style="width:100%;">
        {% unless product.has_only_default_variant %}
        <variant-selects class="custom-variants sticky--atc--product-options no-js-hidden"
          data-section="{{ section.id }}" data-url="{{ product.url }}">
          {% if product.options != blank %}
          {%- for option in product.options_with_values -%}
          <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
            class="select__select form-select sticky--atc-product-option" name="options[{{ option.name | escape }}]"
            data-product-handle="{{ product.handle }}">
            {%- for value in option.values -%}
            {% unless value contains '% off' %}
            <option value="{{ value | escape }}" {% if option.selected_value==value %} selected="selected" {% endif %}>
              {{ value }}
            </option>
            {% endunless %}
            {%- endfor -%}
          </select>
          {%- endfor -%}
          {% endif %}
        </variant-selects>
        {% endunless %}
        <ATC class="custom-atc">
          <button class="ATC-btn sticky--btn-atc btn w-100 text-center" name="add"
            data-text="{{ 'product.add_to_cart' | t }}" {% unless current_variant.available %} disabled {% endunless %}>  
            {% if current_variant.available %}
            {{ 'product.add_to_cart' | t }}
            {% else %}
            {{ 'product.sold_out' | t }}
            {% endif %}
          </button>
        </ATC>
      </div>
    </div>
  </div>
</div>
{% endif %}
{%- liquid
if product.selected_or_first_available_variant.featured_media
assign seo_media = product.selected_or_first_available_variant.featured_media
else
assign seo_media = product.featured_media
endif
-%}
  <script>
     const product__bottommedias = new Swiper(".custom-product-bottomsider", {
        spaceBetween: 10,
        slidesPerView: 4,
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
       
       });
    const product__medias = new Swiper('.custom-product-sider',{
      slidesPerView:1,
      loop:true,
      speed:1000,
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
      pagination: {
          el: ".swiper-pagination",
          type: "fraction",
        },
       thumbs: {
          swiper: product__bottommedias,
        },
      });
  
     </script>
{% if product.type == 'Sets' %}
<script>
  const subValueSelector = document.querySelectorAll(".subValueSelector");
  const mainValueSelector = document.querySelectorAll(".mainValueSelector");
  let variantSelected = [];
  let variantId = [];
  mainValueSelector.forEach((d, index) => {
    variantId.push(d.options[d.selectedIndex].getAttribute("data-id"));
  });
  let combineString = variantId.join("_");
  let getAllValue;
  function onVariantChange(e) {
    e.parentElement.querySelectorAll("label").forEach((x) => {
      x.removeAttribute("selected", "selected");
    });
    e.setAttribute("selected", "selected");
  }
  document
    .getElementsByClassName("customATCSets")[0]
    .addEventListener("click", function (click) {
      document.querySelectorAll(".selectSizeShow").forEach((x) => {
        x.style.display = "none";
      });
      if (
        click.target.parentElement.querySelectorAll(".variantParent").length ===
        click.target.parentElement.querySelectorAll(
          '.variantParent .variantSelector label[selected="selected"]'
        ).length
      ) {
        document
          .getElementsByClassName("customATCSets")[0]
          .setAttribute("type", "submit");
        let prodArr = [];
        let combineName = "";
        let combineProp = "";
        click.target.parentElement
          .querySelectorAll(
            '.variantParent .variantSelector label[selected="selected"]'
          )
          .forEach((x) => {
            click.target.parentElement
              .querySelectorAll(".mainValueSelector option")
              .forEach((y) => {
                if (
                  y.getAttribute("value").split("/")[0].slice(0, -1) ==
                  x.getAttribute("data-name") &&
                  y.getAttribute("data-prod") == x.getAttribute("data-id")
                ) {
                  combineName += `${x.getAttribute("data-name")}`;
                  prodArr.push(y.getAttribute("data-id"));
                  combineProp += `${y.getAttribute("data-id")}_`;
                }
              });
          });
        addToCartSet(prodArr, `${combineProp.slice(0, -1)}##${combineName}`);
      } else {
        document.querySelectorAll(".selectSizeShow").forEach((x) => {
          x.style.display = "block";
        });
      }
    });

  function addToCartSet(arr, combineProp) {
    Shopify.queue = [];
    for (var i = 0; i < arr.length; i++) {
      Shopify.queue.push({
        variantId: arr[i],
      });
    }
    Shopify.moveAlong = function () {
      if (Shopify.queue.length) {
        var request = Shopify.queue.shift();
        var data = {
          items: [
            {
              quantity: 1,
              id: request.variantId,
              properties: {
                "PairId": combineProp,
              },
            },
          ],
        };
        fetch(window.Shopify.routes.root + "cart/add.js", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        })
          .then((response) => {
            Shopify.moveAlong();
            window.refreshCartContents();
            if (document.querySelector("#offcanvas-cart")) {
              bootstrap.Offcanvas.getOrCreateInstance("#offcanvas-cart").show();
            }
            updateCartItems(1);
          })
          .catch((error) => { });
      }
    };
    Shopify.moveAlong();
  }
    function setsAddToCart(c, q, combine) {
      var mainVar = "{{product.selected_or_first_available_variant.id}}";
      Shopify.queue = [];
      var quantity = q;
      for (var i = 0; i < c.length; i++) {
        product = c[i]
        Shopify.queue.push({
          variantId: product
        });
      }
      Shopify.moveAlong = function () {
        // If we still have requests in the queue, let’s process the next one.
        if (Shopify.queue.length) {
          var request = Shopify.queue.shift();
          if (request.variantId == mainVar) {
            var data = {
              items: [
                {
                  "quantity": q,
                  "id": request.variantId
                }
              ]
            };
          }
          else {
            var data = {
              items: [
                {
                  "quantity": q,
                  "id": request.variantId,
                  "properties": {
                    'PairId ': combine
                  }
                }
              ]
            };
          }
          fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          })
            .then(response => {
              if (document.querySelector('#offcanvas-cart')) {
                bootstrap.Offcanvas.getOrCreateInstance('#offcanvas-cart').show()
              }
              Shopify.moveAlong();
              quantity += 1;
              window.refreshCartContents()
              return response.json();

            })
            .catch((error) => {
              console.error('Error:', error);
            });
        }
        // If the queue is empty, we add 1 to cart
        else {
          quantity += 1;
          window.refreshCartContents()
        }
      };
      Shopify.moveAlong();
    }
</script>
   
{% endif %}

<script>
  let productObject = {{ product.variants | json}}
  let tempVar = {{ product.selected_or_first_available_variant.options | json }};
  document.querySelectorAll('.custom-variants select').forEach(e => {
    e.addEventListener('change', onChange => {
      tempVar = [];
      document.querySelectorAll('.custom-variants select').forEach(val => {
        tempVar.push(val.value);
      });

      document.querySelectorAll('.selection_option-1 .variants_buttoncustom').forEach(elem => {
           if(elem.querySelector("input").value === tempVar[0]){
             elem.querySelector("label").click();
           }
      });


      
    })
  });  

 
   if(document.querySelector('.ATC-btn')){
    document.querySelector('.ATC-btn').addEventListener('click', event => {
     tempVar = [];
      document.querySelectorAll('.custom-variants select').forEach(val => {
        tempVar.push(val.value);
      });
      
      productObject.forEach(e => {
         if (Array.isArray(e.options) &&
           Array.isArray(tempVar) &&
           e.options.length === tempVar.length &&
           e.options.every((val, index) => val === tempVar[index])){ customATC(e);}
   
      })
    })
  } 
 
  
  function customATC(variantObj) {
    console.log("test atc");
    console.log(variantObj.id);
    let formData = {
      'items': [{
        'id': variantObj.id,
        'quantity': 1
      }]
    };
    fetch(window.Shopify.routes.root + 'cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
      .then(response => {
        if (document.querySelector('#offcanvas-cart')) {
          bootstrap.Offcanvas.getOrCreateInstance('#offcanvas-cart').show()
        }
        window.refreshCartContents()
        return response.json();

      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }
</script>
<script>
  if (screen.width > 786) {
    const slider = document.querySelectorAll('.scroll-offer');
    let isDown = false;
    let startX;
    let scrollLeft;
    for (let i = 0; i < document.querySelectorAll('.scroll-offer').length; i++) {
      slider[i].addEventListener('mousedown', (e) => {
        isDown = true;
        slider[i].classList.add('active');
        startX = e.pageX - slider[i].offsetLeft;
        scrollLeft = slider[i].scrollLeft;
      });
      slider[i].addEventListener('mouseleave', () => {
        isDown = false;
        slider[i].classList.remove('active');
      });
      slider[i].addEventListener('mouseup', () => {
        isDown = false;
        slider[i].classList.remove('active');
      });
      slider[i].addEventListener('mousemove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - slider[i].offsetLeft;
        const walk = (x - startX) * 3; //scroll-fast
        slider[i].scrollLeft = scrollLeft - walk;
      });
    }
  }
</script>

{% comment %} for thumbnail slides {% endcomment %}

<script>
  if (screen.width > 786) {
    const slider = document.querySelectorAll('.thumbnail-media .inner-div');
    let isDown = false;
    let startX;
    let scrollLeft;
    for (let i = 0; i < document.querySelectorAll('.thumbnail-media .inner-div').length; i++) {
      slider[i].addEventListener('mousedown', (e) => {
        isDown = true;
        slider[i].classList.add('active');
        startX = e.pageX - slider[i].offsetLeft;
        scrollLeft = slider[i].scrollLeft;
      });
      slider[i].addEventListener('mouseleave', () => {
        isDown = false;
        slider[i].classList.remove('active');
      });
      slider[i].addEventListener('mouseup', () => {
        isDown = false;
        slider[i].classList.remove('active');
      });
      slider[i].addEventListener('mousemove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - slider[i].offsetLeft;
        const walk = (x - startX) * 3; //scroll-fast
        slider[i].scrollLeft = scrollLeft - walk;
      });
    }
  }
</script>
<script>
  document.querySelectorAll('.myclass').forEach(e => {
    e.addEventListener('change', m => {
      if (m.target.type === "radio") {
        var currVariant = m.target.attributes['value'].value;
        m.target.closest('.product-option').previousElementSibling.querySelector('.selected---variant').innerText = currVariant;
      }
    })
  })
</script>
<script>
  if(document.querySelector('.sticky-addtocart')){
   document.querySelector('.sticky-addtocart').style.display = "none";
    window.onscroll = function () {
      if (pageYOffset >= document.querySelector('.product-other-info ').offsetTop) {
        if (window.screen.width > 575) { document.querySelector('.sticky-addtocart').style.display = "flex"; }
        else {
          document.querySelector('.sticky-addtocart').style.display = "block";
        }
      }
      else {
        document.querySelector('.sticky-addtocart').style.display = "none";
      }

    }; 
  }
</script>
<script>

  document.querySelectorAll('.copy-text').forEach((e) => {
    e.addEventListener('click', (x) => {
      let para1 = x.target.offsetParent.querySelector(".copy-text").innerHTML = "Copied";
      setTimeout(() => {
        x.target.offsetParent.querySelector(".copy-text").innerHTML = "Copy Code";
      }, 800);
      let couponcode = x.target.offsetParent.querySelector(".offer-title");
      let textarea = document.createElement("textarea");
      textarea.setAttribute("readonly", "");
      textarea.value = couponcode.innerText;
      textarea.style.position = "absolute";
      document.body.appendChild(textarea);
      textarea.select();
      document.execCommand("copy");
      document.body.removeChild(textarea);
    })
  })
</script>

<script type="application/ld+json">
  {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
          "image": [
              {{ seo_media | image_url: width: seo_media.preview_image.width | prepend: "https:" | json }}
          ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if product.selected_or_first_available_variant.sku != blank -%}
          "sku": {{ product.selected_or_first_available_variant.sku | json }},
      {%- endif %}
      "brand": {
          "@type": "Brand",
          "name": {{ product.vendor | json }}
      },
      "offers": [
          {%- for variant in product.variants -%}
              {
              "@type" : "Offer",
              {%- if variant.sku != blank -%}
                  "sku": {{ variant.sku | json }},
              {%- endif -%}
              {%- if variant.barcode.size == 12 -%}
                  "gtin12": {{ variant.barcode }},
              {%- endif -%}
              {%- if variant.barcode.size == 13 -%}
                  "gtin13": {{ variant.barcode }},
              {%- endif -%}
              {%- if variant.barcode.size == 14 -%}
                  "gtin14": {{ variant.barcode }},
              {%- endif -%}
              "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
              "price" : {{ variant.price | divided_by: 100.00 | json }},
              "priceCurrency" : {{ cart.currency.iso_code | json }},
              "url" : {{ request.origin | append: variant.url | json }}
              }{% unless forloop.last %},{% endunless %}
          {%- endfor -%}
      ]
  }
</script>

<script>
  document.querySelectorAll('.thumbnailslide ').forEach(x => {
    x.addEventListener('click', (m) => {
      document.querySelector('.swipe-global').style.pointerEvents = 'none';
      let dataindex = m.target.getAttribute('data-index');
      var targetDiv = document.querySelector('.carousel_demo .carousel-indicators').children;
      for (var i = 0; i < targetDiv.length; i++) {
        if (targetDiv[i].getAttribute('data-bs-slide-to') === dataindex) {
          if (m.target.closest('.carousel-item-div').attributes["class"].value.includes('carousel-item-div')) {

            document.querySelectorAll('.carousel-item-div').forEach((p) => {

              p.classList.remove('active');
            })
            m.target.closest('.carousel-item-div').classList.add('active');
            let imgslider = document.querySelectorAll('.carousel-item-div');

            for (let i = 0; i < document.querySelectorAll('.carousel-item-div').length; i++) {
              if (imgslider[i].matches('.active')) {
                break;
              }
              else {
                let temp0 = imgslider[i];
                document.querySelector('.inner-div').append(temp0);
              }
            }
          }

          targetDiv[i].click();
        }

      }
    })
  });

  var myCarousel = document.querySelector('.carousel_demo');
  //var carousel = new bootstrap.Carousel(myCarousel, {
    //interval: false,
    //wrap: true
  //})
  if(myCarousel){
  myCarousel.addEventListener('slide.bs.carousel', function () {
    // document.querySelector('.swipe-global').style.pointerEvents = 'none';
    setTimeout(function () {

      productSlideActiveIndex();

    }, 700);
  });
  }
  // code for product media section ka bootstrap pagal nahi hoga
  document.querySelectorAll('#recipeCarousel a').forEach(e => {
    e.addEventListener('click', (m) => {
      document.querySelectorAll('#recipeCarousel a').forEach(m => {
        m.style.pointerEvents = 'none';
      })
      setTimeout(() => {
        document.querySelectorAll('#recipeCarousel a').forEach(f => {
          f.style.pointerEvents = 'auto';
        })
      }, 1200)
    })
  })


function showvideo(id){
  document.getElementById(`img_${id}`).style.display="none";
  document.getElementById('vid_'+id+'').style.display="none";
  document.querySelector('.videoosss.topvideos video').style.display="block";
  }
  function showvideob(id){
  document.getElementById('imgb_'+id+'').style.display="none";
    document.getElementById('vidb_'+id+'').style.display="none";
  document.querySelector('.videoosss.bottomvideos video').style.display="block";
  }

  function productSlideActiveIndex() {

    var productslider = document.querySelector('.carousel_demo .carousel-inner').children;
    for (var i = 0; i < productslider.length; i++) {
      if (productslider[i].matches('.active')) {
        let productslidindex = productslider[i].getAttribute('data-index');
        var thumbnailindicat = document.querySelector('.thumbnailslide').children;
        for (var i = 0; i < thumbnailindicat.length; i++) {
          if (thumbnailindicat[i].getAttribute('data-index') == productslidindex) {
            if (thumbnailindicat[i].getAttribute('data-bs-slide-to') === productslidindex) {
              thumbnailindicat[i].click();
              document.querySelector('.swipe-global').style.pointerEvents = 'unset';
            }
          }
        }
      }
    }

  }
</script>
<script>
  function firePriceChange(){
    if(document.querySelectorAll('.variantParent').length 
      === document.querySelectorAll('.variantParent input:checked').length){
          let totalPrice = 0;
          let totalCmpPrice = 0;
          document.querySelectorAll('.variantParent input:checked').forEach(e=>{
            totalPrice += Number(e.getAttribute('var-price'))
            totalCmpPrice += Number(e.getAttribute('var-cmp'))
          });
          console.log('Total price:',totalPrice,'Total Compare Price:',totalCmpPrice);
          if(totalPrice) document.querySelector('.text-success').innerHTML = formatMoney(totalPrice);
          if(totalCmpPrice > totalPrice) {
            document.querySelector('.product-price-compare s').innerHTML = formatMoney(totalCmpPrice);
            document.querySelector('.new-bg').innerText = `(${Math.floor((((totalCmpPrice - totalPrice) / totalCmpPrice) * 100)) % OFF})`
          }
      }
  }
</script>
{% comment %} quantity script code {% endcomment %}

<script>
  function increment() {
    document.getElementById('demoInput').stepUp();
  }
  function decrement() {
    document.getElementById('demoInput').stepDown();
  }
</script>

<style>
  .d-flex {
    display: flex;
    gap:10px;
  }

  /* thumb slider */



  .thumbnailslider .carousel-inner,
  .thumbnailslider .carousel,
  .thumbnailslider .carousel-item,
  .thumbnailslider .carousel-container {
    height: auto;
    width: 100%;
    background-position: center center;
    background-size: cover;
  }

  .carousel-item-div {
    webkit-transition: 3s;
    -moz-transition: 3s;
    -ms-transition: 3s;
    -o-transition: 3s;
    transition: 3s;
  }

  /* .thumbnailslider .carousel-item-prev:not(.carousel-item-end), .thumbnailslider .active.carousel-item-start, .carousel-item-div {
    transform: translate3d(-100%, -0%, 0);
    -webkit-transform: translate3d(-100%, -0%, 0);
    -moz-transform: translate3d(-100%, -0%, 0);
    -ms-transform: translate3d(-100%, -0%, 0);
    -o-transform: translate3d(-100%, -0%, 0);
  }

  .thumbnailslider .carousel-item-next:not(.carousel-item-start), .thumbnailslider .active.carousel-item-end {
    transform: translate3d(100%, 0%, 0);
    -webkit-transform: translate3d(100%, 0%, 0);
    -ms-transform: translate3d(100%, 0%, 0);
    -moz-transform: translate3d(100%, 0%, 0);
    -o-transform: translate3d(100%, 0%, 0);
  } */

  .thumbnailslider .carousel-indicators {
    /*   top: 0;
    margin: auto;
    height: 20px;
    right: 10px;
    left: auto; */
    display: none;
  }

  .img-thumbnail {

    background-color: rgba(0, 0, 0, 0) !important;
    border: 0px !important;
    border-radius: 0rem !important;

  }

  #recipeCarousel .carousel-indicators {
    display: none;
  }

  .thumbnailslider .carousel-indicators [data-bs-target] {
    background: none;
    border: 2px solid white;
    border-radius: 12px;
    width: 12px;
    height: 12px;
    margin-bottom: 5px;
    /* custom css*/
    display: none;
  }

  .thumbnailslider .carousel-indicators li.active {
    background: white;
  }

  .thumbnailslider .carousel-control-next-icon,
  .thumbnailslider .carousel-control-prev-icon {
    width: 4rem;
    height: 4rem;
    position: fixed;
    top: 95%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(90deg);
    z-index: -1;
  }

  .thumbnailslider .carousel-control-prev-icon {
    top: 5%;
  }

  .thumbnailslider .unclickable {
    pointer-events: none;
  }

  .thumbnailslider .clickable {
    .thumbnailslider pointer-events: all;
  }

  .thumbnailslider .btn-style {
    border-color: white;
    content: url("./images/GitHub-Mark-Light-120px-plus.png");
    width: calc(1.475rem + 2.7vw);
    position: absolute;
    bottom: 10px;
    right: 10px;
    padding: 4px;
  }

  .thumbnailslider .btn-style:hover {
    background-color: black;
    content: url("./images/GitHub-Mark-Light-120px-plus.png");
    width: calc(1.475rem + 2.7vw);
  }

  .thumbnailslider .img-style {
    width: calc(1.475rem + 2.7vw);
  }

  .thumbnailslider .img-style:hover {
    width: calc(1.475rem + 2.7vw);
  }

  .thumbnailslider .roll-in-blurred-right {
    -webkit-animation: roll-in-blurred-right 1s cubic-bezier(0.175, 0.885, 0.320, 1.275) both;
    animation: roll-in-blurred-right 1s cubic-bezier(0.175, 0.885, 0.320, 1.275) both;
  }

  .container_wrapercustom {
    margin-right: auto;
  }

  /* .thumbnailslider button.carousel-control-prev,.thumbnailslider button.carousel-control-next{display:none;}   */

  @-webkit-keyframes roll-in-blurred-right {
    0% {
      -webkit-transform: translateX(1000px) rotate(720deg);
      transform: translateX(1000px) rotate(720deg);
      -webkit-filter: blur(50px);
      filter: blur(50px);
      opacity: 0;
    }

    100% {
      -webkit-transform: translateX(0) rotate(0deg);
      transform: translateX(0) rotate(0deg);
      -webkit-filter: blur(0);
      filter: blur(0);
      opacity: 1;
    }
  }

  @keyframes roll-in-blurred-right {
    0% {
      -webkit-transform: translateX(1000px) rotate(720deg);
      transform: translateX(1000px) rotate(720deg);
      -webkit-filter: blur(50px);
      filter: blur(50px);
      opacity: 0;
    }

    100% {
      -webkit-transform: translateX(0) rotate(0deg);
      transform: translateX(0) rotate(0deg);
      -webkit-filter: blur(0);
      filter: blur(0);
      opacity: 1;
    }
  }

  .thumbnailslider {
    height: auto;
  }

  .thumbnailslider .carousel-inner .carousel-item img {
    height: 25% !important;
    display: inline-block;
    width: 19.6% !important;
  }

  .product-nav-next .carousel-control-next-icon {
    background-image: url('https://cdn.shopify.com/s/files/1/0028/1486/9553/files/Group_1568.png?v=1669890737') !important;
  }

  @media (max-width: 575px) {}

  /* thumb slider end */
</style>
{% schema %}
{
  "name": "Product template",
  "settings": [
      {
          "type": "header",
          "content": "General"
      },
      {
          "type": "select",
          "id": "title_size",
          "label": "Title Size",
          "default": "h2",
          "options": [
              { "group": "Heading", "value": "h1", "label": "H1" },
              { "group": "Heading", "value": "h2", "label": "H2" },
              { "group": "Heading", "value": "h3", "label": "H3" },
              { "group": "Heading", "value": "h4", "label": "H4" },
              { "group": "Heading", "value": "h5", "label": "H5" },
              { "group": "Heading", "value": "h6", "label": "H6" }
          ]
      },
      {
          "type": "checkbox",
          "id": "show_share_btn",
          "label": "Show \"Share\" button",
          "default": true
      },
      {
          "type": "checkbox",
          "id": "show_wishlist_btn",
          "label": "Wishlist",
          "default": true
      },
       {
          "type": "checkbox",
          "id": "show_offer_btn",
          "label": "Offer Available",
          "default": true
      },
     {
          "type": "text",
          "id": "show_offer_title",
          "label": "Offer Title",
          "default": "Offer For You"
      },
       {
          "type": "checkbox",
          "id": "Show_other_info",
          "label": "Shipping Details",
          "default": true
      },
      {
          "type": "html",
          "id": "info_title1",
          "label": "Title-1"
      },
      {
          "type": "image_picker",
           "id": "icon_image1",
           "label": "icons-1"
      },
      {
          "type": "html",
          "id": "info_title2",
          "label": "Title-2"
      },
      {
          "type": "image_picker",
           "id": "icon_image2",
           "label": "icons-2"
      },
      {
          "type": "html",
          "id": "info_title3",
          "label": "Title-3"
      },
      {
          "type": "image_picker",
           "id": "icon_image3",
           "label": "icons-3"
      },
      {
          "type": "header",
          "content": "Spacing"
      },
      {
          "type": "range",
          "id": "pt",
          "label": "Padding top",
          "min": 0,
          "max": 20,
          "step": 1,
          "default": 10
      },
      {
          "type": "range",
          "id": "pb",
          "label": "Padding bottom",
          "min": 0,
          "max": 20,
          "step": 1,
          "default": 10
      },
      {
          "type": "range",
          "id": "mt",
          "label": "Margin top",
          "min": 0,
          "max": 20,
          "step": 1,
          "default": 0
      },
      {
          "type": "range",
          "id": "mb",
          "label": "Margin bottom",
          "min": 0,
          "max": 20,
          "step": 1,
          "default": 0
      },
     {
          "type": "checkbox",
          "id": "show_size_chart",
          "label": "Show Size Chart",
          "default": true
      },
      {
        "type": "textarea",
        "id": "size_chart_value",
        "label": "Size Chart Value",
        "info" : "Add size chart page handle with it's related product tag Separated by ## and add multiple items separated by comma "

      },
  {
        "type": "textarea",
        "id": "feature_product_value",
        "label": "Product Feature Images",
        "info" : "Add all Feature Product images URl Comma separated "

      }
  ],
  "blocks": [
      {
          "type": "offer",
          "name": "Add Offer",
          "settings": [
              {
                  "type": "text",
                  "id": "title",
                  "label": "Title"
              },
             {
                  "type": "image_picker",
                  "id": "icon_image_offer",
                  "label": "icons"
             },
             {
                  "type": "html",
                  "id": "info_details",
                  "label": "details"
              },
              {
                  "type": "color",
                  "id": "body_color",
                  "label": "background"

            },
            {
                  "type": "color",
                  "id": "tilcolor",
                  "label": "Heading Color"

            },
            {
               "type": "color",
                  "id": "colroffcont",
                  "label": "Content Color"
            }

          ]
      }
  ],
  "presets": [
      {
          "name": "Product template",
          "category": "Product page"
      }
  ]
}
{% endschema %}
